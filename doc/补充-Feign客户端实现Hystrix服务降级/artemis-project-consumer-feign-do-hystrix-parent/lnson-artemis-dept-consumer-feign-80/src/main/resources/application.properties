server.port=80



########### Eureka相关配置 ###########
# false表示不向注册中心注册自己
eureka.client.register-with-eureka=false
# 使消费端可以到Eureka集群上查找服务列表，然后才能做负载均衡
eureka.client.service-url.defaultZone=http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/



########### 在feign客户端 关于hystrix 的相关配置 ###########
#### 说明：spring cloud Feign引入了服务容错的工具Hystrix
# 启用Feign客户端的Hystrix支持
feign.hystrix.enabled=true
# 表示是否开启超时设置
hystrix.command.default.execution.timeout.enabled=true
# 设置调用者执行的超时时间（单位毫秒）
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000
# 是否开启fallback功能
hystrix.command.default.fallback.enabled=true
# 开启断路器功能
hystrix.command.default.circuitBreaker.enabled=true
# 设置滚动窗口中将使断路器跳闸的最小请求数量
hystrix.command.default.circuitBreaker.requestVolumeThreshold=10
# 断路器跳闸后，在此值的时间的内，hystrix会拒绝新的请求，只有过了这个时间断路器才会打开闸门
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000
# 设置失败百分比的阈值。如果失败比率超过这个值，则断路器跳闸并且进入fallback逻辑
hystrix.command.default.circuitBreaker.errorThresholdPercentage=60



########### 在feign客户端 关于Ribbon 的相关配置 ###########
#### 说明：Spring cloud Feign的客户端负载均衡是通过spring cloud Ribbon实现的
# 请求处理的超时时间
ribbon.ReadTimeout: 1800
# 请求连接的超时时间
ribbon.ConnectTimeout: 3000
ribbon.OkToRetryOnAllOperations=true
# 重试策略先尝试访问首选案例一次，失败后才更换实例访问
ribbon.MaxAutoRetries=1
# 尝试更换两次实例进行重试
ribbon.MaxAutoRetriesNextServer=2



###########################################################
# Ribbon的超时 与 Hystrix的超时 是两个概念。
# 一般需要让hystrix的超时时间大于Ribbon的超时时间，
# 否则Hystrix命令超时后，该命令直接熔断，重试机制就没有任何意义了。
###########################################################
